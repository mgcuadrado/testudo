541 testudo-0.9
  updated copyright notices
540
  corrected a couple of target names
539
  testudo version 0.9
538
  updated "testudo_doc.ttd" not to be copyrighted
537
  wrote a rationale for keeping the distinction between "declare" and
  "perform"
536 [merge]
  merge
535
  made it possible for the XML-to-text conversion to detect, recover from, and
  notify about a report that's been prematurely ended by a crash in the tests
534
  reorganised targets in "Makefile.testudo" and documented development targets
533
  made "<interactive_test/>" one of the normally detected XML elements,
  instead of giving it a special treatment
531
  cleaned up "kmsxml::process()" and "testudo_xml_to_color()"
530
  since we're now outputting XML as the test tree is constructed, avoided
  actually constructing the tree altogether
529
  replaced the driven traversal of the read XML tree that used
  "process_children()" with an automatic one that uses "process()"
528
  made XML test output synchronous, i.e., it's output as the test runs,
  so even if the test crashes, everything until the crash is output;
  i still have to make the XML-to-text conversion synchronous too
524
  replaced the "set_no_quotes_around_string()" mechanism with the simpler
  "testudo::unquoted()" function
523
  corrected some variable names ("TO_COLOR" is now "TO_TEXT")
522
  made track reports aware of terminal size and colour capabilities
518
  made Makefile targets that report results aware of the terminal colour
  capabilities
517
  separated "auto_weak_ptr<>" into its own header file
516
  made Makefile targets that report results terminal-size aware
515
  avoided a Unicode character that isn't allowed in C++ identifiers
514
  print quotes around strings by default, configurable with one macro and
  two functions
513
  s/g++10/g++/
511
  explicitly converted the argument to a "_true" or "_false" check to bool
510
  testudo version 0.9rc
509
  added the one-style manuals to the release and changed the link in
  "README.md" to point to the lower-case manual
508 testudo-0.8
  testudo version 0.8
507
  minor edits
506
  integrated "The race" in the manual
505
  typeset a version of the tale with ASCII-art images and monospaced text
504
  some ASCII-art drawing
503
  some writing and cleaning up
502
  adjusted left margin for code listings
501
  added the "lc"- and "uc"-style editions of the manual
500
  corrected a few minor space issues with the "lc"-style examples
499
  transferred the remaining examples from the manual to the Testudo
  examples file
498
  transferred yet more examples from the manual to the Testudo examples file;
  the only remaining ones are those in sections 13 and C
497
  improved manual generation by moving temporary files into a subdirectory,
  and moving the resulting PDF file after it's been generated (so, if you're
  reading it, the time where it's invalid is much shorter); added an image
  at the very end of the manual
496
  transferred some more examples from the manual to the Testudo examples file
495
  transferred more examples from the manual to the Testudo examples file
494
  started transferring examples from the manual (dead code) into a Testudo
  test file (live code) from which snippets are extracted and formatted
  for the document; this includes instances of "SHOW_APPROX_EPSILON" and
  "FAKE_PERFORM", that had rotten for lack of exercise (they were mentioned
  in the manual)
493
  corrected "FAKE_PERFORM" (it had no instance in the tests; i'll commit one)
492
  corrected "SHOW_APPROX_EPSILON" (it had no instance in the tests; i'll
  commit one)
491
  minor edits
490
  added a test using a lambda that uses Testudo syntax
489
  testrengthened "kmsxml"
488
  in track reports, distinguised between "[-BAD-]" (failed checks) and
  "[-VERY-BAD-]" (errors)
487
  coded "generate_data_tuple()" and "cartesian_product()", useful to generate
  data for with-data loops
486
  added the possibility to pass "MockClass<>" several base classes to derive
  from, but only the first one can have its constructor using'd
485
  allowed for functions used for mock method default value or scheduled
  values to depend on the mock-method arguments
484
  a clarification and a couple of tasks, all about mock methods
483
  removed the requirement to add a second "const" after the "wrap_method()"
  macro for wrapped const methods, at the cost of having to write all method
  specifiers as a parenthesised list
482
  some thinking on the TODO and a minor edit to the manual
481
  enabled "show_value()" in with-data loops
480
  improved the section on textual representation, and made misc edits
479
  added the possibility to control textual representation with manipulators
  (seemed easy, but i had to replace "testudo::to_text()" with
  "testudo::to_stream()", and it was a big change)
478
  Rauda the rabbit doe
477
  a couple new tasks
476
  tiny code improvements
475
  minor corrections
474
  new "literary" task
473
  documented "the provided" syntax
472
  new cover
471
  implemented the "provided" syntax for code sections guarded by a check;
  still to be documented
470
  now that it doesn't include STL headers, so it doesn't add to your included
  headers, transferred "testudo_tex.h" into "testudo_base.h"
469
  generalised "testudo_ext.h" so that it includes as few headers as possible
  (also removed an exception throwing in favour of returning a huge "absdiff")
468
  made all checks syntaxes, including and especially "_true_for()" and
  "_false_for()", check the validity of their argument
467
  showed expressions checked for validity by the "true_for" syntax even
  for passed checks (but their values are only shown for failed checks)
466
  made continuation '\' chars at the end of broken lines blue
465
  solved a few doc issues
464
  new TODO items
463
  corrected perfect forwarding
462
  removed rmme
461
  m4-automatised the remaining max-number-dependant macros
460
  fixed minor errors
459
  factored out the definition of SFINAE-based type traits for expression
  validity
455
  new task
452
  some minor edits here and there
451
  turned the list of "make" commands into a table
437
  a new item
406
  minor edits
402
  added a black-and-white "text" format
400
  added global variable initialisation activation, for projects that
  dynamically load Testudo's library (like "testudo_py")
398
  a couple of ideas
397
  corrected the rule to generate the executable: it was using as "$^"
  all prerequisites, not just "$(SHAREDLIBS)"
396
  added the possibility of having an "interactive test" report whose XML
  isn't processed
393
  testudo version 0.8rc
392 testudo-0.7
  testudo version 0.7
391
  improved "make diff_xml_text_test_savel_color" by removing line information
390
  in checks, automaticall detect multiline arguments and display them
  accordingly
389
  corrected order in new "make diff_..."
388
  removed the XSLT-based conversion from XML to colour text; saved colour
  and colour summary reports as new saved results, and added them to
  "make diff_tests"
387
  added an interesting assert
386
  added "make show_report_bw"
385
  slightly improved "make diff_track", and moved "XML_TO_COLOR_LATEX" to
  "Makefile"
384
  corrected "jobserver unavailable" warning when doing "make -j 8 diff_trac]"
383
  made "print_text()" automatically detect and correctly handle multiline
  text, and removed "print_multiline_text()"
382
  documented the new newline-aware "show\_value()" and the removal of
  "show_multiline\_value()"
381
  made "show_value()" automatically detect and correctly handle multiline
  arguments, and removed "show_multiline_value()"
380
  added some words about coding workflow with "make" commands
379
  added black-and-white track progress report
378
  made track progress report clearer
377
  made progress tracking uncaught-exception-aware (was ignoring uncaught
  exceptions)
376
  added a no-changes message to the progress track report when there are
  no changes, and prefixed progress track report headers with four dashes
375
  added to the "README.md" some words and a printout about progress tracking
374
  improved track CRCs by including the type of intruction; breaks saved tracks
373
  corrected try-catch track format
372
  corrected installation from clean state
371
  last-minute updates for release 0.6
370
  testudo version 0.7rc
369 testudo-0.6
  testudo version 0.6
367
  moved ASCIIart to the "asciiart" project
366
  added some small details
365
  added a couple more makefile target aliases, and documented the makefiles
364
  an additional alias, "success_test", for projects that always maintain
  a 100%-ok tests
363
  added a Makefile for projects to use with Testudo, added some target
  aliases ("test"->"report"), and renamed the saved test report
362
  added Makefile targets to manage and use tracks
361
  corrected "try" track
360
  small adjustments to the workflow description
359
  wrote section "Development workflow with Testudo"
358
  corrected wrong "with-data" loop location
357
  drew a couple logos
356
  tiny correction to the ASCII logo
355
  corrected this: a "with-data" loop with several failed steps showed for
  each step all failed steps so far
354
  small refactorisation; still some ANSI hard-coded code
353
  saved DuneBuggy reports
352
  improved and colorised track output
351
  "unbrought" some functions that aren't meant for the users
350
  installed only necessary headers
349
  implemented UTF8 support in test reports
348
  coded an alternative to "xml_to_color -w <width>"
347
  slightly improved option management code
346
  updated TODO
345
  updated forgotten includes
344
  coded an alternative to "xml_to_color -s"
343
  used the new XML-to-text filter for black-and-white text output
342
  refactored the color typesetter so it can do black-and-white too
341
  finished coding an alternative to "xml_to_color" (without any option;
  i'll have to code the options too; see "TODO")
339
  corrected usage of "testudo" executable: from within the "testudo"
  project itself, it must be the local version
338
  added an installable dynamic Testudo library, so you can choose to use
  the executable and link your tests dynamically, or link your tests using
  the compiler and provide a custom "main()"
337
  refactored the colour text output format into a helper typesetter class and
  the format itself; this is an intermediate step towards having a non-Unix
  "xml_to_color"
336
  corrected usage of "BINSDIR"
335
  documented installation, and made the installation prefix configurable
334
  added rudimentary install and uninstall procedures (with "make install"
  and "make uninstall")
332
  removed temporary ASCII-art
330
  a lot of ASCII drawings for the presentation
329
  small logo detail
328
  added an "Unicode extravaganza" style to test what Unicode chars we can
  use or Testudo macros
327
  some cosmetics: added an Esperanto flux capacitor test, a logo with an
  autoportrait, and minor changes to the existing logo
326
  testudo version 0.6rc
325 testudo-0.5
  testudo version 0.5
324
  corrected a couple of minor problems for releases: the release directory
  may not be called "testudo", and there are now some subdirectories to
  add to the release
323
  delimited addresses with "[...]" rather than "<...>" so that parsing is
  easier ("->" in the track diff addresses might be confusing)
322
  shortened changed track diff entries when both addresses have the same
  file name
321
  added the "-d" option to declare a common starting path part, that will
  get replaced with "..." in reports
320
  minor edits
319
  improved track diff output; should make it colourisable
318
  added per-type summaries to track diffs
317
  move OUTATIME examples into the main directory, added a ".headers" link
  to use '#include <testudo/...>' rather than '#include "..."' for Testudo
  headers, and updated "README.md"
316
  corrected indentation when breaking lines (spaces at the beginning of
  multiline values, not generated by "||~inc_indent~||", were considered
  part of the indentation to maintain after a break)
315
  added the "with-multiline-data" syntax, which works like "with-data",
  but writes one container element per line
314
  added the "check-true-for" and "check-false-for" syntaxes, to get more
  information about specific values when checking for trueness or falseness
313
  integrated line info in the default output formats
312
  added some info
311
  added the final to the test diff engine: edit tables and track summaries;
  got it working with DuneBuggy
310
  coded edit tables, to get easy access to changes between the source and
  the target
309
  ignored the address when comparing track elements
308
  coded track parsing and track element ordering
307
  some minor changes
306
  slightly simplified shortest edit algorithm
305
  improved shortest edit algorithm by making a single pass looking for
  longest sequences, then processing them all in decreasing order of length,
  and adding broken ones for later processing
304
  coded a simple module to make tracing algorithms easier
303
  small improvement to the shortest edit algorithm: avoided subsequences
  of longer sequences
302
  small improvement to the shortest edit algorithm: stored sequences rather
  than elements
301
  coded "shortest_edit()" to find changes (not necessarily longest common
  subsequences)
300
  coded Myers' algorithm for diff
299
  minor optimisation for diff
298
  simple change that makes diff faster
297
  improved diff algorithm
296
  added random-generated test cases for the diff alrorithm
295
  moved main executable logic to a reusable function
294
  started work to code a report difference utility (currently, only the
  diff algorithm; still some random-based testing to do); added subcommands
  ("run", "help", "diff")
293
  coded a format designed to ease report difference computing
292
  removed mentions to OXYS
291
  removed redundant anonymous namespaces
290
  removed dead method
289
  added test selection by glob wildcard
288
  coded a small glob library
287
  simplified subtree test execution
286
  added more control to specify what tests to run: "-s <test-root>" (one)
  and "-i <node-name>" (any number)
285
  renamed the executable, and wrote some words about it
284
  small optimisation
283
  made the width of the CRC hex representation explicit
282
  made "crc" a header-only library
281
  minimised dependencies for the CRC code
280
  coded CRC-32 and CRC-64-ECMA in case they're useful for check progression
  monitoring
279
  various minor fixes and improvements
278
  coded and documented structured binding syntax for "with_data()"
277
  wrote some wishes
276
  drew Dune Buggy logo
275
  tiny typo
274
  documented the new syntax for name sand titles for tests and test nodes
273
  improved the syntax of test and test node definitions by making it possible
  to omit the test name (in which case, the title is used for the name)
272
  testudo version 0.5rc
271 testudo-0.4
  corrected wrong cross references
270
  testudo version 0.4
269
  put a generated struct in an anonymous namespace to avoid potential
  name clashes
268
  renamed "show_scope()" to "in_scope()"
267
  identified all test steps with their location; only for
  "color_text_with_lines" format fttb
266
  first step towards identifying each test and step with its location in
  the source code: a format "color_text_with_lines" that identifies just
  tests, fttb
265
  documented log-checking utility functions
264
  implemented the plan to improve the customisation needed to make a type
  Testudo-supported
263
  added a plan to improve the customisation needed to make a type
  Testudo-supported
262
  forgotten files for Esperanto-style tests
261
  extracted "exception_to_text()" from "to_text_testudo()"
260
  wrote "Using your own test macro names"
259
  wrote "Editor configuration"
258
  coded and documented "generate\_data()" using theorem verification with
  random data as an example
257
  finished the section about adding Testudo support for your types, by
  writing about difference between two values
256
  wrote the section about having Testudo checks for equality support
  your types
255
  wrote about "Adding Testudo support for your types" (not finished yet)
254
  added some security checks to call ledger iterators
253
  reordered with-data loops and fixtures
252
  mentioned STL container validity
251
  added validity support for STL containers
250
  wrote section "Testudo support for STL containers"
249
  made it possible to specify the container for a with-data loop with just
  a braced list of values
248
  removed "with_data_define_top_test()" and "with_data_define_test()"
247
  finished unfinished section "How to schedule mock-related behaviour"
246
  removed "testudo::" from the documentation (but explained it)
245
  (hope i) protected all names to avoid name clashes
244
  wrote some tasks, and some task progress
243
  wrote some words about potentially macro-fooling arguments (macro arguments
  with non-parenthesised commas)
242
  wrote some words about potentially macro-fooling arguments (macro arguments
  with non-parenthesised commas)
241
  wrote a few words about Testudo macros, and added an additional level to
  the TOC
240
  improved "CallLedger" by having it derive from the mocked class, and
  renamed it "MockClass<Base>" in this context
239
  minor correction, and TODO cleaning
238
  removed the space after the version number in the document title
237
  testudo version 0.4rc
236 testudo-0.3
  testudo version 0.3
235
  added a mention of mock testing to the "README.md"
234
  trivial renames in a test
233
  just changed the order of tests in "make diff_tests", so that it grows
  from more lax to more strict
232
  corrected coloured text output for cases where the length of a failed
  check text was such that it could add the tag with no red '-'; it should
  always add at least one red '-'
231
  spelling and misc corrections
230
  finished documenting Mock Turtle, by writing about checks with mock-method
  ledgers
229
  wrote a couple of features
228
  wrote "how to check mock-method logs"
227
  started a rundown of features i don't want to forget about
226
  documented the "with-declare" macro
225
  checked and corrected "abs_diff()" (with "approx" macro) for "call_record<>"
224
  removed wrong namespace mention
223
  coded "abs_diff()" for "call_record<>"
222
  coded the "pop-call" macro
221
  made "with-declare" report text terser
220
  made "show-scope" report text terser
219
  used "with-declare" to check mock call ledger calls, and exercised some
  of the unexercised methods of "CallLedger::iterate<>"
218
  coded "with-declare" macro
217
  put "show_scope(...)" before the opening brace, rather than after
216
  wrote some reminders
215
  coded validity checking on the argument to the "check" macro
214
  wrote about scheduling mock-method behaviour; unfinished
213
  generalised "schedule_ret()", improved its syntax, and coded
  "set_ret_default()"
212
  corrected "testudo_doc.ttd" TeX report generation
211
  wrote about mocking and wrapping methods
210
  another tiny correction to the uppercase style
209
  corrected uppercase style (these macros shouldn't start with a "_")
208
  wrote a brief list of features, some indications about how to use Testudo,
  and some words about mock objects (still a lot to write about mock objects)
207
  tested non-polymorphic mock classes
206
  wrote some words about Testudo installation
205
  added a generator for Emacs' "font-lock-add-keywords" command to highlight
  Testudo macro names
204
  added some missing inline specifiers
203
  corrected some minor formatting errors
202
  styled mock macros
201
  automatically generated the list of "cpplisting" keywords from the
  lowercase and uppercase styles
200
  documented test-aware functions et al (passing "test_management")
199
  testudo version 0.3rc (forgot to do it earlier)
198
  renamed "with()" to "with_data()"
197
  some code simplifications
196
  put "test_format" and "test_stats" together into a single
  "test_management_t" class, so that the "test-parameters" and
  "test-arguments" aren't needed
195
  made args logging happen even in the face of exception throwing
194
  corrected a difference between the XML-to-colour format and the
  direct-to-colour format, caused by a extraneous space
193
  added exception-throwing scheduling
192
  renamed auto-generated macro header
191
  auto-generated macros that depend on the max number of macro arguments
190
  added the capability to check method invocation order across multiple mocks
189
  made some simplifications, and wrote some comments
188
  corrected support for wrapping void and no-argument methods, and treated
  void return types more uniformly
187
  improved "call<>" structure and text format, and added the macro to use them
186
  basic support for cheking call order across methods
185
  tiny edit
184
  corrected line-breaking problem with "show_multiline_value()"
183
  added a note about Google Mock
182
  added useful predicates for "mock-turtle"
181
  added the possibility to give a mock method a default value when defining it
180
  added some macros to help with mock object checks
179
  made it so you can leave out complex type specifications in "equal"
  and "approx" macros in many cases; had to switch the order of "tol" and
  "approx" macros
178
  added "diff_tests" target
177
  coded the possibility to give alternative names to the log and schedule
  of a mocked or wrapped method
176
  small improvements to the mock turtle test
175
  coded text representation for maps
174
  corrected sequences text format
173
  simplified mock method specifier syntax
172
  coded support for wrapping mock objects
171
  coded initial support for mock objects
170
  specialised text output for empty containers
169
  added specialisation for comparing integrals for equality, to avoid
  silly warnings
168
  added pun
167
  solved syntax error with optimisation
166
  added a summary for external "with()"-loops
165
  removed dangerous trick
164
  added some more tests to show what checks with precoded predicates would
  look like
163
  minor edits
162
  simplified "with()" implementation
161
  stopped explicitly specifying templates to apply
160
  indented step fails within a "with()"-loop
159
  corrected "with()"-loop format for complex chained loops
158
  showed value and failed check for "with()" fails, instead of just the value
157
  added a log object that encompasses all related instances of
  "WithLoopTestFormat" to correct the indentation of outer failes in
  "with()"-loop chains
156
  renames to avoid name clashes
155
  simplified "with()"-loop implementation
154
  coded the negated versions of checks for "equal", "approx", and "verify"
153
  reworked "check(...)_false" so that it can be generalised to negate
  other checks
152
  added more cases for chained "with()"-loops where the inner loop is just
  a part of the outer loop's body; some formatting issues appear
151
  added a level of indirection to "to_text()" to make it more robust
150
  simplified code
149
  simplified code
148
  added the "check(...)_false" macro
147
  added a success line for successful "with()"-loops
146
  removed smelling "recursively_first_time()" and "recursively_last_time()"
  from base "TestFormat"
145
  moved code from the header file to the implementation file
144
  mentioned page numbers for the example test code and the resulting report
143
  cleaning
142
  final cleaning touches to "with()"-loops
141
  some minute colour code adjustments to make "make diff_xml_text_test_color"
  succeed
140
  corrected long cartouched titles that have to be broken up in "color_text"
  format
139
  minor edits
138
  polished and shipped the "with-loop" feature
136
  ported the "with()"-loop syntax to XML; still some work to do to clean
  and generalise (for "lc"-vs-"uc", for instance)
135
  solved a bug with broken line indentation in the text color format, and
  implemented scope indentation for XML format (added a few new makefile
  targets to check-text color vs XML formats)
134
  unfinished: coded a quick-and-dirty implementation for the with-loop
  concept; for the time being, only for colour text, and only with macros in
  "testarudo.ttd", and the test that uses it is commented-out; but if you
  uncomment it, it works
133
  turned "TestFormat" bool arguments into strings, so that they can have
  other values apart from "false" and "true"
132
  new idea: with-loops
131
  made compiler commands silent (you can see them again with "make --trace")
130
  had forgotten to "-include" test (".ttd") dependencies
129
  removed the need for the "-d" option (all non-option arguments are
  libraries to load)
128
  removed the need for the "-d" option (all non-option arguments are
  libraries to load)
127
  coded dynamic loading of libraries containing tests
126
  added a table of macro names per style to the doc
125
  wrote down some ideas about dynamic loading of tests, and a low-priority
  task to check if Testudo can be done in C++14 or even C++11
124
  removed file redundancy when copying
123 testudo-0.02
  testudo version 0.02
122
  documented new fixture features
121
  checked unexpected exceptions in hidden fixtures still report the error
120
  implemented the whole "hidden fixture" concept, by having fixture methods
  behave hidden for hidden fixtures (before that, only fixture constructor
  and destructor honoured hiddenness)
119
  coded fixture member declaration and initialisation, and a simplified
  version of hidden fixtures
118
  coded a very simple filter to show ANSI codes, so that we can compare
  the output of different test report toolchains precisely (they may differ
  unobservably, for instance in the colour in place when a space is printed)
117
  gave the "check-try-catch" instruction the possibility to specify the
  specific kind of exception
116
  added an idea
115
  corrected the summary report to show "[ERR-]" tags when appropriate
114
  refactored "xml_to_color" to make it simpler and better documented, to
  correct format across line breaks, and to have multiline cartouches for
  long contents
113
  removed filling lines that aren't needed anymore
112
  added some comments
111
  wrote some words about fatal errors, and gave some minimal content to
  each section, as a reminder of what each one is about
110
  some more details about a possible "_relapprox()" check macro
109
  made the separator ("print_break()") as wide as the line width
108
  simplified the try-check-catch report
107
  marked tests with errors as [ERR-] rather than [FAIL]
106
  make unexpected exceptions caught by the "try-catch" instruction still
  be unexpected instructions (with a rethrow)
105
  documented step IDs, and wrote some words about declarations vs actions
104
  moved the flag name of the "try-check" syntax into a new "step-id" syntax
  (this syntax can be used for any kind of step, but i first coded it as
  a way of not losing the flag name information)
103
  tiny comment about predetermined predicates
102
  documented "check-verify" syntax and predicates
101
  coded a simple predicate type and some macros to easily define and operate
  with predicates
100
  coded initial support for predicate-verifying checks
99
  cleared some confusion between value and reference
97
  added some ideas about predicates
96
  added upper-case style
95
  small changes to the release procedure
94
  renamed generated changelog
93
  reorganised release generation
92
  added png logo generation
91
  unburned version
90
  typo
89
  wrote a "README.md" for GitHub
88
  added a very simple example for the "README.md" documentation
87
  excluded the code example in the manual from being copyrighted
86
  testudo version 0.02rc
85 testudo-0.01
  small corrections to release procedure (copy permissions from original file
  when addind license notice; match full lines when avoiding copying files)
84
  removed ".headers", since i have linked needed header files
83
  copied some files over, mainly from "cppfunct", for release
81
  put a yellow background behind the "FAIL" tag in the reports, for the
  benefit of color-blind people
80
  removed the need for the "test_namespace()" macro, by using name mangling
  instead of namespaces for test nodes and test functions
79
  added a notice "this is in its early stages"
78
  documented test nodes, tests with a test function, and fixtures
77
  removed "testudo" from "testudo_test_parameters" and
  "testudo_test_arguments"
76
  some code simplifications
75
  some more cleaning
74
  some code simplifications (mainly, fused "TestNode" and "Test")
73
  added a global root test node, and a way to retrieve top nodes by name,
  while creating them if they don't exist yet; until documented, check
  related task in "TODO"
72
  added a UML diagram
71
  forgot to update success file
70
  some minor edits
69
  added an uncaught exception to the showcase test (had to shorten the test
  to stay within the one-page limit for the code and the report)
68
  documented fake-declare instruction and uncaught-exception flagging
67
  coded support for red-background error flagging in LaTeX format
66
  removed the priority in the test that goes into the documentation, in
  order to avoid early confusion
65
  added per-test detection of unexpected exceptions
64
  forgot to update the markup format for the summary
63
  managed tasks
62
  added a mention of the fixture on the report, and somewhat reworked the
  way fixture specification is implemented
61
  changed the sequence of classes and methods for the check macros; now, new
  kinds of checks can be added without changing the initial "Check<A>" class
60
  wrote some explanations about the macros in a separate text file
59
  simplified "testudo__TOL_S()"
58
  corrected some rvalue and universal reference errors, made tiny adjustments,
  and removed some obsolete code
57
  slightly improved macros, for clarity
56
  made a better syntax for tests with fixtures
55
  minor corrections
54
  added the possibility to output to LaTeX format, and used it in the document
53
  handled "@" specially (the "awk" script got confused if there were "@"
  instances in the original text)
52
  small change
51
  added an option to translate to colourful LaTeX (in a "fancyvrb"
  "Verbatim" environment
50
  finished the chapter "test steps"
49
  removed the old one-macro check instructions
48
  changed the way values are stored in special short-lived classes by the
  check instruction macros, so that lvalues are copied, and other values
  are just referenced; this makes it possible to store a non-copyable
  object for equality comparison, and use its conversion operator later,
  when the second value is available
47
  simplified type deduction in check instructions, and avoided using
  "decltype()" on the expressions, since it doesn't work with lambdas
  (something about an unevaluated context)
46
  added dependency on the test instruction macro style generator
45
  finished the section about check syntax
44
  started the description of test instruction macros
43
  added the possibility to have several styles for test instructio macro
  names, and even define your own
42
  coded a better (methinks) set of checking instruction syntax, that solves
  the problem with some expressions needing to be bracketed; didn't obsolete
  yet the old one; i'll have to remove from the doc the explanation about
  bracketed expressions
41
  wrote some structure, and some text about output formats and test
  hierarchies
40
  made scopes into their own structure
39
  first version of segregated "testudo" (from "oxys/testit")
